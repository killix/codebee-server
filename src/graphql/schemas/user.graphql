type User implements Node {
  id: ID!
  name: String!
}

input UpdateUserInput {
  id: ID!
  name: String!
  clientMutationId: String
}

type UserPayload {
  user: User
  clientMutationId: String
}

# Registration
input RegisterUserInput {
  name: String!
  email: String!
  username: String!
  password: String!
  clientMutationId: String
}

extend type Query {
  # user(id: ID!): User
  # users: [User]
}

extend type Mutation {
  updateUser(input: UpdateUserInput): UserPayload
  registerUser(input: RegisterUserInput): UserPayload
}
